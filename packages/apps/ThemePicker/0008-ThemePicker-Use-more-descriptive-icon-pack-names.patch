From 08dae6d5e677cffa69d0a9e0860a45aaf5582020 Mon Sep 17 00:00:00 2001
From: Danny Lin <danny@kdrag0n.dev>
Date: Tue, 3 Nov 2020 11:38:07 -0800
Subject: [PATCH 08/12] ThemePicker: Use more descriptive icon pack names

AOSP icon packs have proper names (or at least codenames) set as app
names that we can query through PackageManager. Show those instead of a
meaningless number for easier icon pack identification.

Change-Id: I233294ce8ccad131d2cf84ffc44b25ed8655795d
---
 .../model/theme/custom/IconOptionsProvider.java              | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/com/android/customization/model/theme/custom/IconOptionsProvider.java b/src/com/android/customization/model/theme/custom/IconOptionsProvider.java
index f7b669b..1457d54 100644
--- a/src/com/android/customization/model/theme/custom/IconOptionsProvider.java
+++ b/src/com/android/customization/model/theme/custom/IconOptionsProvider.java
@@ -24,6 +24,7 @@ import static com.android.customization.model.ResourceConstants.OVERLAY_CATEGORY
 import static com.android.customization.model.ResourceConstants.OVERLAY_CATEGORY_ICON_THEMEPICKER;
 
 import android.content.Context;
+import android.content.pm.PackageManager;
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.content.res.Resources;
 import android.content.res.Resources.NotFoundException;
@@ -71,6 +72,7 @@ public class IconOptionsProvider extends ThemeComponentOptionProvider<IconOption
     protected void loadOptions() {
         addDefault();
 
+        PackageManager pm = mContext.getPackageManager();
         Map<String, IconOption> optionsByPrefix = new HashMap<>();
         for (String overlayPackage : mOverlayPackages) {
             IconOption option = addOrUpdateOption(optionsByPrefix, overlayPackage,
@@ -79,6 +81,8 @@ public class IconOptionsProvider extends ThemeComponentOptionProvider<IconOption
                 for (String iconName : ICONS_FOR_PREVIEW) {
                     option.addIcon(loadIconPreviewDrawable(iconName, overlayPackage));
                 }
+
+                option.setLabel(pm.getApplicationInfo(overlayPackage, 0).loadLabel(pm).toString());
             } catch (NotFoundException | NameNotFoundException e) {
                 Log.w(TAG, String.format("Couldn't load icon overlay details for %s, will skip it",
                         overlayPackage), e);
@@ -104,7 +108,6 @@ public class IconOptionsProvider extends ThemeComponentOptionProvider<IconOption
         for (IconOption option : optionsByPrefix.values()) {
             if (option.isValid(mContext)) {
                 mOptions.add(option);
-                option.setLabel(mContext.getString(R.string.icon_component_label, mOptions.size()));
             }
         }
     }
-- 
2.34.1

